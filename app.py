# -*- coding: utf-8 -*-
"""Exp_8_Om_Jadhao_2024310006_FDS

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HjdWOE90mwt5Z6a1OCVAtMv_Ds9pph1V
"""

!pip install kagglehub pandas numpy matplotlib seaborn scikit-learn joblib streamlit

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler

# Load the dataset
data = pd.read_csv('/content/drive/MyDrive/Cleaned_Energy_Data.csv')

# Check for missing values
print(data.isnull().sum())

# Visualize the data
sns.pairplot(data)
plt.show()

# Correlation heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title("Correlation Heatmap")
plt.show()

# Normalize the continuous variables
scaler = StandardScaler()
data[['Temperature (째C)', 'Humidity (%)']] = scaler.fit_transform(data[['Temperature (째C)', 'Humidity (%)']])

from sklearn.model_selection import train_test_split
from sklearn.linear_model import Ridge
from sklearn.metrics import mean_squared_error

# Define features and target
X = data[['Temperature (째C)', 'Humidity (%)', 'Occupancy']]
y = data['Energy Consumption (kWh)']

# Split the dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = Ridge()
model.fit(X_train, y_train)

# Test the model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")

import streamlit as st
import numpy as np

# Streamlit app
st.title("Energy Consumption Prediction")

# Input fields
temperature = st.number_input("Temperature (째C)")
humidity = st.number_input("Humidity (%)")
occupancy = st.radio("Occupancy", (0, 1))

# Prediction button
if st.button("Predict"):
    input_features = np.array([[temperature, humidity, occupancy]])
    prediction = model.predict(input_features)[0]
    st.write(f"Predicted Energy Consumption: {prediction:.2f} kWh")

import joblib

# Save the model
joblib.dump(model, 'ridge_model.pkl')